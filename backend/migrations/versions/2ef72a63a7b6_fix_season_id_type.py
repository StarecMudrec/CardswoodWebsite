"""fix season_id type

Revision ID: 2ef72a63a7b6
Revises: dfad8dd3e10d
Create Date: 2025-05-02 15:44:05.270074

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2ef72a63a7b6'
down_revision = 'dfad8dd3e10d'
branch_labels = None
depends_on = None


def upgrade():
    # Step 1: Add temporary column
    op.add_column('card', sa.Column('season_id_int', sa.Integer()))
    
    # Step 2: Convert data (handling non-numeric values)
    op.execute("""
        UPDATE card 
        SET season_id_int = CASE 
            WHEN season_id ~ '^[0-9]+$' THEN CAST(season_id AS INTEGER)
            ELSE NULL
        END
    """)
    
    # Step 3: Drop original column
    op.drop_column('card', 'season_id')
    
    # Step 4: Rename temporary column
    op.alter_column('card', 'season_id_int', new_column_name='season_id')
    
    # Step 5: Add back constraints if needed
    op.create_foreign_key(
        'fk_card_season_id',
        'card', 'season',
        ['season_id'], ['id']
    )

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('season', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_index('idx_16395_sqlite_autoindex_season_1', ['uuid'], unique=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=20),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('uuid',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_index('idx_16400_sqlite_autoindex_comment_1', ['uuid'], unique=True)
        batch_op.alter_column('card_id',
               existing_type=sa.Integer(),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
        batch_op.alter_column('uuid',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('card', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_index('idx_16390_sqlite_autoindex_card_1', ['uuid'], unique=True)
        batch_op.alter_column('season_id',
               existing_type=sa.Integer(),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('description',
               existing_type=sa.String(length=1000),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=20),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('category',
               existing_type=sa.String(length=20),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('img',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('uuid',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('auth_token', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_index('idx_16385_sqlite_autoindex_auth_token_1', ['token'], unique=True)
        batch_op.alter_column('user_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
        batch_op.alter_column('token',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###
